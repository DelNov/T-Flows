# This file describes usual git workflow.
#------------------------------------------------------------------------------#

# If you do not yet have any local copy of the remote git repository:

git clone https://github.com/DelNov/T-Flows/ <NAME_OF_LOCAL_BRANCH>

#------------------------#       #-------------------#
# local copy             #  <--  # remote repository #
#------------------------#  <--  #-------------------#
# branch:                #  <--  # branch:           #
# <NAME_OF_LOCAL_BRANCH> #  <--  # release_branch    #
#------------------------#       #-------------------#

# If argument <NAME_OF_LOCAL_BRANCH> was not supplied, then
# <NAME_OF_LOCAL_BRANCH> = release_branch

#------------------------------------------------------------------------------#

# Whenever you have a local copy of remote repository type:

git remote -v

# to display the list of remote repositories, which local git knows.

# <REMOTE_NAME> <URL> (fetch)
# <REMOTE_NAME> <URL> (push)

# Those are actually pointers to url of remote repository.
# Thus: <REMOTE_NAME> -> <URL>

# After you have created this pointer,
# you refer to remote repository only by
# this pointer <REMOTE_NAME> and not actual URL

# By default <REMOTE_NAME> is "origin"

# You can rename any repository by:
git remote rename <OLD_NAME> <NEW_NAME>

#------------------------------------------------------------------------------#

# Since you can not push directly to https://github.com/DelNov/T-Flows/,
# you have to fork it first through git website.

# List of existing forks:
# https://github.com/DelNov/T-Flows/network/members

# Let local git know your personal fork by:

git remote add <FORK_NAME> <URL>

#------------------------------------------------------------------------------#

# To pull the latest version from the remote repository,
# which is known to local git by pointer with name <REMOTE_NAME>:

git pull <REMOTE_NAME> <REMOTE_BRANCH_NAME>

# 'Pull' command is a combination of 'fetch' and 'merge'.
# Fetch command gets content of <REMOTE_NAME> and nothing more.
# Merge command makes an attempt to merge <REMOTE_BRANCH_NAME> to current

# Since this code has release_branch and development_branch,
# you may want to have both of them updated without merging one into another.
# In this case:

git fetch <REMOTE_NAME>
git checkout -b <LOCAL_BRANCH_NAME> <FORK_NAME>/<REMOTE_BRANCH_NAME>

#------------------------------------------------------------------------------#

# During editing use following commands frequently:

# To check status of local branch:
git status

# To prepare file for commit:
git add <FILENAME>

# To cancel any changes in a file:
git checkout <FILENAME>


# To see a difference between file and its previous committed version 
git diff <FILENAME>

# To submit a commit:
git commit

# To create new local branch based on currently selected one:
git checkout -b <NONEXISTING_LOCAL_BRANCH_NAME>
# or
git branch <NONEXISTING_LOCAL_BRANCH_NAME>

# To delete a branch:
git branch -d <LOCAL_BRANCH_NAME>

# To list local branches:
git branch

# To switch to a local branch:
git checkout <LOCAL_BRANCH_NAME>

# To merge a local branch into currently selected one:
git merge <LOCAL_BRANCH_NAME>
# Warning: requires practice if fails to merge automatically.

# To store current state of a local branch and hide[/stash] them away:
git stash save "message"

# To list available stashes:
git stash list

# To reapply changes from a stash:
git stash pop <STASH_NAME>

# To delete a stash:
git stash clear <STASH_NAME>
#------------------------------------------------------------------------------#

# If you made some commits you can make a push to your fork by:

git push <FORK_NAME> <NAME_OF_LOCAL_BRANCH>:<NAME_OF_REMOTE_BRANCH>

# If NAME_OF_REMOTE_BRANCH does not exist, git will create it

#----------------------#       #---------------------------#
# local copy           #  -->  # fork of remote repository #
#                      #  -->  # known as FORK_NAME        #
#----------------------#  -->  #---------------------------#
# branch:              #  -->  # branch:                   #
# NAME_OF_LOCAL_BRANCH #  -->  # NAME_OF_REMOTE_BRANCH     #
#----------------------#       #---------------------------#

# After commits are pushed, you can create a pull request from git website
# page with branch you just pushed to
#------------------------------------------------------------------------------#