//------------------------------------------------------------------------------
//
// Parameters defining domain extentss and resolution
// (This should be fiddled with, but with care)
//
//------------------------------------------------------------------------------
option = 0;  // 1 - fuel; 2 - cladding; 3 - water; any other number - all

r_ilay = 0.007;
r_fuel = 0.008;
r_clad = 0.01;   // 1   cm
r_blay = 0.012;  // 1.2 cm
h_full = 0.05;   // 10  cm
x_box  = 0.05;
y_box  = 0.15;

n_ilay =  5;  // number of nodes in inner layer
n_fuel = 13;  // number of nodes across the cladding
n_blay = 13;  // number of layers in the boundary layer
n_azim = 41;  // number of nodes in azimuthal direction
n_axis = 21;  // number of nodes in axial direction

prog = 1.2;

x_cent = 0.0;
y_cent = 0.0;

//------------------------------------------------------------------------------
//
// Parameters for the problem definition algorithms
// (These are better kept untouched)
//
//------------------------------------------------------------------------------

// Work out necessary resolutions in the fluid
circum = 2.0 * r_blay * Pi;
delta_min = circum / 4.0 / (n_azim - 1);
delta_max = delta_min * 3.0;

// Lines in radial direction
LINES   = 100;
CIRCLES = 200;

//------------------------------------------------------------------------------
//
// Points
//
//------------------------------------------------------------------------------

// Points defining the arcs
For n In{ 1 : 16 }
  r = r_ilay;
  If(n >  4) r = r_fuel; EndIf
  If(n >  8) r = r_clad; EndIf
  If(n > 12) r = r_blay; EndIf
  angle = Pi/4.0 + (n-1) * Pi/2.0;
  Point(n) = {x_cent + r * Cos(angle), y_cent + r * Sin(angle), 0.0};
EndFor

// Central point
Point(17) = {x_cent, y_cent, 0.0};

// Points defining the domain
Point(18) = {x_cent + x_box/2.0, y_cent + y_box - x_box/2.0, 0.0};
Point(19) = {x_cent - x_box/2.0, y_cent + y_box - x_box/2.0, 0.0};
Point(20) = {x_cent - x_box/2.0, y_cent - x_box/2.0, 0.0};
Point(21) = {x_cent + x_box/2.0, y_cent - x_box/2.0, 0.0};

//------------------------------------------------------------------------------
//
// Lines
//
//------------------------------------------------------------------------------

// Lines in all layers, radial direction, total 12 of them
For lay In{ 0 : 2 }     // 0 - inner layer; 1 - cladding; 2 - boundary layer
  For line In{ 1 : 4 }
    n1 = line     + lay*4;
    n2 = line + 4 + lay*4;
    Line(LINES + line + lay*4) = {n1, n2};
  EndFor
EndFor
Transfinite Line{LINES +1:LINES +4} = n_ilay;
Transfinite Line{LINES +5:LINES +8} = n_fuel Using Progression 1.0/prog;
Transfinite Line{LINES +9:LINES+12} = n_blay Using Progression prog;

// Lines defining the bounding box
Line(LINES + 13) = {18, 19};
Line(LINES + 14) = {19, 20};
Line(LINES + 15) = {20, 21};
Line(LINES + 16) = {21, 18};

// All the circles
For lay In{ 0 : 3 }     // 0 - inner layer; 1 - cladding; 2 - boundary layer
  For circ In{ 1 : 4 }
    n1 = circ     + lay*4;
    n2 = circ + 1 + lay*4;
    If(circ == 4) n2 = n2 - 4; EndIf
    Circle(CIRCLES + circ + lay*4) = {n1, 17, n2};
  EndFor
EndFor
Transfinite Line{CIRCLES+1:CIRCLES+16} = n_azim;

//------------------------------------------------------------------------------
//
// Surfaces
//
//------------------------------------------------------------------------------

// Create surface in layer around fuel cladding
For lay In{ 0 : 2 }     // 0 - inner layer; 1 - cladding; 2 - boundary layer
  For loop In{ 1 : 4 }
    l1 = LINES   + loop + lay*4;   l3 = l1 + 1;
    c4 = CIRCLES + loop + lay*4;   c2 = c4 + 4;
    If(loop == 4) l3 = l3 - 4; EndIf
    Curve Loop   (loop + lay*4) = {l1, c2, -l3, -c4};
    Plane Surface(loop + lay*4) = {loop + lay*4};
  EndFor
EndFor
Transfinite Surface  "*";

// Create surface for the fluid domain
Curve Loop(13) = {CIRCLES+1:CIRCLES+4};  Plane Surface(13) = {13};
Curve Loop(14) = {LINES  +13:LINES  +16};
Curve Loop(15) = {CIRCLES+13:CIRCLES+16};
Plane Surface(14) = {14, 15};

// Recombine all surfaces
// This is mandatory for extrusion <----------= IMPORTANT
Recombine Surface    "*";

// Define resolution in the fluid domain
// How come it only impacts the fluid domain?
Field[2]         = Cylinder;
Field[2].VIn     = delta_min;
Field[2].VOut    = delta_max;
Field[2].Radius  = r_blay * 1.2;
Field[2].XCenter = x_cent;
Field[2].YCenter = y_cent;
Background Field = 2;

//------------------------------------------------------------------------------
// Volumes
//------------------------------------------------------------------------------

// Fuel
If(option == 1)
  Extrude {0, 0, h_full} {
    Surface{1:4, 13};
    Layers{n_axis};
    Recombine;
  }
  Physical Surface("wall") = {229, 251, 273, 295};
  Physical Volume("fuel")  = {1:4, 13};
  Recursive Delete {Surface{5:12,14};}

// Cladding
ElseIf(option == 2)
  Extrude {0, 0, h_full} {
    Surface{5:8};
    Layers{n_axis};
    Recombine;
  }
  Physical Surface("wall")    = {229, 251, 273, 295, 237, 259, 281, 303};
  Physical Volume("cladding") = {5:8};
  Recursive Delete {Surface{1:4, 9:14};}

// Water
ElseIf(option == 3)
  Extrude {0, 0, h_full} {
    Surface{9:12,14};
    Layers{n_axis};
    Recombine;
  }
  Physical Surface("wall")   = {237, 259, 281, 303};
  Physical Surface("sides")  = {329, 321};
  Physical Surface("bottom") = {325};
  Physical Surface("top")    = {317};
  Physical Volume("water")   = {9:12, 14};
  Recursive Delete {Surface{1:8,13};}

// All three domains
Else
  Extrude {0, 0, h_full} {
    Surface{1:14};
    Layers{n_axis};
    Recombine;
  }
  Physical Surface("wall")    = {229, 251, 273, 295, 237, 259, 281, 303};
  Physical Surface("sides")   = {329, 321};
  Physical Surface("bottom")  = {325};
  Physical Surface("top")     = {317};
  Physical Volume("fuel")     = {1:4, 13};
  Physical Volume("cladding") = {5:8};
  Physical Volume("water")    = {9:12, 14};
EndIf

